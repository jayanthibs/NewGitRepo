<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="4" passed="3" failed="0" skipped="1">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-10-03T16:28:27 EDT" name="SauceLabSuite" finished-at="2023-10-03T16:28:42 EDT" duration-ms="15061">
    <groups>
    </groups>
    <test started-at="2023-10-03T16:28:27 EDT" name="SauceLabTest1" finished-at="2023-10-03T16:28:28 EDT" duration-ms="1719">
      <class name="saucelabpackage.SauceLabTestcase">
        <test-method is-config="true" signature="setup(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:saucelabpackage.SauceLabTestcase@43195e57]" started-at="2023-10-03T16:28:27 EDT" name="setup" finished-at="2023-10-03T16:28:28 EDT" duration-ms="1672" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Edge]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[97]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows 10]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.SessionNotCreatedException">
            <message>
              <![CDATA[Could not start a new session. Unable to parse remote response: Misconfigured -- Unsupported OS/browser/version/device combo: OS: 'Windows 10', Browser: 'edge', Version: '97.', Device: 'unspecified']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Unable to parse remote response: Misconfigured -- Unsupported OS/browser/version/device combo: OS: 'Windows 10', Browser: 'edge', Version: '97.', Device: 'unspecified'
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:112)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:84)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:62)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:156)
at org.openqa.selenium.remote.TracedCommandExecutor.execute(TracedCommandExecutor.java:39)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:559)
at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:246)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:168)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:146)
at saucelabpackage.SauceLabTestcase.setup(SauceLabTestcase.java:38)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:176)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:122)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.openqa.selenium.json.JsonException: Unable to parse: Misconfigured -- Unsupported OS/browser/version/device combo: OS: 'Windows 10', Browser: 'edge', Version: '97.', Device: 'unspecified'
at org.openqa.selenium.json.Json.toType(Json.java:57)
at org.openqa.selenium.json.Json.toType(Json.java:50)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:109)
... 30 more
Caused by: org.openqa.selenium.json.JsonException: Unable to determine type from: M. Last 1 characters read: M
Build info: version: '4.0.0', revision: '3a21814679'
System info: host: 'BALA-PC', ip: '192.168.1.175', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.1'
Driver info: driver.version: RemoteWebDriver
at org.openqa.selenium.json.JsonInput.peek(JsonInput.java:126)
at org.openqa.selenium.json.JsonTypeCoercer.lambda$buildCoercer$6(JsonTypeCoercer.java:141)
at org.openqa.selenium.json.JsonTypeCoercer.coerce(JsonTypeCoercer.java:127)
at org.openqa.selenium.json.Json.toType(Json.java:71)
at org.openqa.selenium.json.Json.toType(Json.java:55)
... 32 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.SessionNotCreatedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifySearch()[pri:0, instance:saucelabpackage.SauceLabTestcase@43195e57]" started-at="2023-10-03T16:28:28 EDT" name="verifySearch" finished-at="2023-10-03T16:28:28 EDT" duration-ms="0" status="SKIP">
          <exception class="org.openqa.selenium.SessionNotCreatedException">
            <message>
              <![CDATA[Could not start a new session. Unable to parse remote response: Misconfigured -- Unsupported OS/browser/version/device combo: OS: 'Windows 10', Browser: 'edge', Version: '97.', Device: 'unspecified']]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Unable to parse remote response: Misconfigured -- Unsupported OS/browser/version/device combo: OS: 'Windows 10', Browser: 'edge', Version: '97.', Device: 'unspecified'
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:112)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:84)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:62)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:156)
at org.openqa.selenium.remote.TracedCommandExecutor.execute(TracedCommandExecutor.java:39)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:559)
at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:246)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:168)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:146)
at saucelabpackage.SauceLabTestcase.setup(SauceLabTestcase.java:38)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:176)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:122)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.openqa.selenium.json.JsonException: Unable to parse: Misconfigured -- Unsupported OS/browser/version/device combo: OS: 'Windows 10', Browser: 'edge', Version: '97.', Device: 'unspecified'
at org.openqa.selenium.json.Json.toType(Json.java:57)
at org.openqa.selenium.json.Json.toType(Json.java:50)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:109)
... 30 more
Caused by: org.openqa.selenium.json.JsonException: Unable to determine type from: M. Last 1 characters read: M
Build info: version: '4.0.0', revision: '3a21814679'
System info: host: 'BALA-PC', ip: '192.168.1.175', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.1'
Driver info: driver.version: RemoteWebDriver
at org.openqa.selenium.json.JsonInput.peek(JsonInput.java:126)
at org.openqa.selenium.json.JsonTypeCoercer.lambda$buildCoercer$6(JsonTypeCoercer.java:141)
at org.openqa.selenium.json.JsonTypeCoercer.coerce(JsonTypeCoercer.java:127)
at org.openqa.selenium.json.Json.toType(Json.java:71)
at org.openqa.selenium.json.Json.toType(Json.java:55)
... 32 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.SessionNotCreatedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySearch -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:saucelabpackage.SauceLabTestcase@43195e57]" started-at="2023-10-03T16:28:28 EDT" name="teardown" finished-at="1969-12-31T19:00:00 EST" duration-ms="-1696364908736" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- saucelabpackage.SauceLabTestcase -->
    </test> <!-- SauceLabTest1 -->
    <test started-at="2023-10-03T16:28:27 EDT" name="SauceLabTest2" finished-at="2023-10-03T16:28:39 EDT" duration-ms="12465">
      <class name="saucelabpackage.SauceLabTestcase">
        <test-method is-config="true" signature="setup(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:saucelabpackage.SauceLabTestcase@59309333]" started-at="2023-10-03T16:28:27 EDT" name="setup" finished-at="2023-10-03T16:28:35 EDT" duration-ms="8601" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[96]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows 11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifySearch()[pri:0, instance:saucelabpackage.SauceLabTestcase@59309333]" started-at="2023-10-03T16:28:35 EDT" name="verifySearch" finished-at="2023-10-03T16:28:39 EDT" duration-ms="3435" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySearch -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:saucelabpackage.SauceLabTestcase@59309333]" started-at="2023-10-03T16:28:39 EDT" name="teardown" finished-at="2023-10-03T16:28:39 EDT" duration-ms="403" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- saucelabpackage.SauceLabTestcase -->
    </test> <!-- SauceLabTest2 -->
    <test started-at="2023-10-03T16:28:27 EDT" name="SauceLabTest4" finished-at="2023-10-03T16:28:40 EDT" duration-ms="13875">
      <class name="saucelabpackage.SauceLabTestcase">
        <test-method is-config="true" signature="setup(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:saucelabpackage.SauceLabTestcase@515aebb0]" started-at="2023-10-03T16:28:27 EDT" name="setup" finished-at="2023-10-03T16:28:35 EDT" duration-ms="8765" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Safari]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[macOS 12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifySearch()[pri:0, instance:saucelabpackage.SauceLabTestcase@515aebb0]" started-at="2023-10-03T16:28:35 EDT" name="verifySearch" finished-at="2023-10-03T16:28:40 EDT" duration-ms="4760" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySearch -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:saucelabpackage.SauceLabTestcase@515aebb0]" started-at="2023-10-03T16:28:40 EDT" name="teardown" finished-at="2023-10-03T16:28:40 EDT" duration-ms="327" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- saucelabpackage.SauceLabTestcase -->
    </test> <!-- SauceLabTest4 -->
    <test started-at="2023-10-03T16:28:27 EDT" name="SauceLabTest3" finished-at="2023-10-03T16:28:42 EDT" duration-ms="15061">
      <class name="saucelabpackage.SauceLabTestcase">
        <test-method is-config="true" signature="setup(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:saucelabpackage.SauceLabTestcase@6b81ce95]" started-at="2023-10-03T16:28:27 EDT" name="setup" finished-at="2023-10-03T16:28:34 EDT" duration-ms="7836" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[97]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[macOS 12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifySearch()[pri:0, instance:saucelabpackage.SauceLabTestcase@6b81ce95]" started-at="2023-10-03T16:28:34 EDT" name="verifySearch" finished-at="2023-10-03T16:28:41 EDT" duration-ms="6924" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySearch -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:saucelabpackage.SauceLabTestcase@6b81ce95]" started-at="2023-10-03T16:28:41 EDT" name="teardown" finished-at="2023-10-03T16:28:42 EDT" duration-ms="278" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- saucelabpackage.SauceLabTestcase -->
    </test> <!-- SauceLabTest3 -->
  </suite> <!-- SauceLabSuite -->
</testng-results>
